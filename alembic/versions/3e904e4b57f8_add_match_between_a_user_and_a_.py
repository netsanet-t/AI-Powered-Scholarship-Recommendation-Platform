"""add match between a user and a scholarship

Revision ID: 3e904e4b57f8
Revises: 566f8b00035c
Create Date: 2025-05-12 21:57:27.063934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3e904e4b57f8'
down_revision: Union[str, None] = '566f8b00035c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scholarship',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('study_level', sa.String(length=100), nullable=True),
    sa.Column('field_of_study', sa.String(length=255), nullable=True),
    sa.Column('eligible_nationalities', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('is_fully_funded', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('scholarship_matchs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('match_persent', sa.Float(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scholarship_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['scholarship_id'], ['scholarship.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Scholarship')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Scholarship',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('study_level', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('field_of_study', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('eligible_nationalities', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_fully_funded', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Scholarship_pkey'),
    sa.UniqueConstraint('name', name='Scholarship_name_key')
    )
    op.drop_table('scholarship_matchs')
    op.drop_table('scholarship')
    # ### end Alembic commands ###
